spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://127.0.0.1:9090
      client:
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/userinfo
            user-name-attribute: sub
        registration:
          google:
            provider: google
            client-id: 897037474382-1eipe3mffu6ielod7kma05fbc1h3siic.apps.googleusercontent.com
            client-secret: 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
            authorization-grant-type:
            - authorization_code
            scope: openid, profile, email
            redirect-uri: http://localhost:8168/login/oauth2/code/google
            client-authentication-method: client_secret_post

  application:
    name: identity-service
  jpa:
    hibernate:
      ddl-auto: create-drop
  datasource:
    url: jdbc:postgresql://localhost:5432/oauth2
    username: postgres
    password: 123456
    driver-class-name: org.postgresql.Driver
  servlet:
    multipart:
      max-request-size: 10MB
      max-file-size: 10MB
  mail:
    host: smtp.gmail.com
    port: 587
    username: istad.codeadvisors@gmail.com
    password: urfl rzjr zbcn jsvn
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true


server:
  port: 9090

logging:
  level:
    org:
      springframework:
#        web: DEBUG
#        mail: DEBUG
        security: DEBUG
eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://167.172.78.79:8761/eureka/